name: SQS

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  sqs_test:
    name: SQS plugin (Go ${{ matrix.go }}, PHP ${{ matrix.php }}, OS ${{matrix.os}})
    runs-on: ${{ matrix.os }}
    concurrency:
      group: sqs-test-group
      cancel-in-progress: true
    timeout-minutes: 60
    strategy:
      matrix:
        php: [ "8.4" ]
        go: [ stable ]
        os: [ "ubuntu-latest" ]
    steps:
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v6 # action page: <https://github.com/actions/setup-go>
        with:
          go-version: ${{ matrix.go }}

      - name: Set up PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2 # action page: <https://github.com/shivammathur/setup-php>
        with:
          php-version: ${{ matrix.php }}
          extensions: sockets

      - name: Check out code
        uses: actions/checkout@v5

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          cd tests/php_test_files
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Init Composer Cache # Docs: <https://git.io/JfAKn#php---composer>
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.php }}-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: cd tests/php_test_files && composer update --prefer-dist --no-progress --ansi

      - name: Init Go modules Cache # Docs: <https://git.io/JfAKn#go---modules>
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Install Go dependencies
        run: go mod download

      - name: Run SQS tests with coverage
        env:
          RR_TEST_ENV: ${{ secrets.RR_TEST_ENV }}
          RR_SQS_TEST_ENDPOINT: ${{ secrets.RR_SQS_TEST_ENDPOINT }}
          RR_SQS_TEST_REGION: ${{ secrets.RR_SQS_TEST_REGION }}
          RR_SQS_TEST_KEY: ${{ secrets.RR_SQS_TEST_KEY }}
          RR_SQS_TEST_SECRET: ${{ secrets.RR_SQS_TEST_SECRET }}
          RR_SQS_TEST_ACCOUNT_ID: ${{ secrets.RR_SQS_TEST_ACCOUNT_ID }}
        run: |
          cd tests
          mkdir ./coverage-ci
          docker compose -f env/docker-compose-otel.yaml up -d
          sleep 30
          go test -timeout 20m -v -race -cover -tags=debug -failfast -coverpkg=$(cat pkgs.txt) -coverprofile=./coverage-ci/sqs.out -covermode=atomic jobs_sqs_test.go jobs_sqs_fifo_test.go

      - name: Run SQS-unit tests with coverage
        run: |
          go test -timeout 20m -v -race -cover -tags=debug -failfast -coverpkg=$(cat ./tests/pkgs.txt) -coverprofile=./tests/coverage-ci/sqs_u.out -covermode=atomic ./...

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: ./tests/coverage-ci/

  codecov:
    name: Upload codecov
    runs-on: ubuntu-latest
    needs:
      - sqs_test

    timeout-minutes: 60
    steps:
      - name: Download code coverage results
        uses: actions/download-artifact@v5
      - run: |
          echo 'mode: atomic' > summary.txt
          tail -q -n +2 *.out >> summary.txt
          sed -i '2,${/roadrunner/!d}' summary.txt

      - name: upload to codecov
        uses: codecov/codecov-action@v5 # Docs: <https://github.com/codecov/codecov-action>
        with:
          files: summary.txt
          fail_ci_if_error: false
